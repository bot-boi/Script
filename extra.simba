{$include_once Script/script.simba}
{$include_once Script/extra/finders.simba}

procedure DoDialogue(options: Array of Int32); // do chat by chat option indices, not strings :) convenient when paired with quest quick guides
var
  option: Int32;
  chatOption: TRSChatOption;
  chatOptions: TRSChatOptionArray;

begin
  writeln('DoDialogue-: Starting.');
  Script.Walker.WaitPlayerMoving();
  Wait(RandomRange(1500, 3500));

  for option in options do begin
    while Chatbox.ClickContinue() do Chatbox.PleaseWait();
    Chatbox.PleaseWait();
    Wait(RandomRange(59, 511));
    chatOptions := Chatbox.GetOptions();

    {$IFDEF DEBUG}
      writeln('chat options!');
      for chatOption in chatOptions do begin
        writeln(chatOption.Text);
      end;
      writeln('end chat options!');
    {$ENDIF}

    writeln(chatOptions[option].Text);
    Chatbox.ClickOption([chatOptions[option].Text]);
    Chatbox.PleaseWait();
  end;
  writeln('DoDialogue-: Done selecting options.');
  while Chatbox.ClickContinue() do Chatbox.PleaseWait();
  writeln('DoDialogue-: Done.');
end;

// ripped from a post by flight
procedure HumanMMouse(eX, eY, MouseSpeed: Integer);
var
  randSpeed: extended;
  X,Y,A,Dist,MP: integer;
begin
  A := MouseSpeed;
  GetMousePos(X, Y);
  Dist := Distance(X, Y, eX, eY);
  MP := Round(Dist/150);
  if MP < 0 then
    MP := 1;

  randSpeed := (random(MouseSpeed) / 2.0 + MouseSpeed) / 10.0;
  Mouse.Move(RandomRange(eX-(A*MP), eX+(A*MP)), RandomRange(eY-(A*MP), eY+(A*MP)));
  GetMousePos(X, Y);
  Mouse.Move(eX, eY);
  MouseSpeed := A;
end;


procedure TPointArray.Shuffle();
var
  p, r: TPoint; // r = random point
begin
  for p in Self do begin
    r := Self[Random(High(Self))];
    tSwap(p, r);
  end;
end;


// add a raw path to a rswalker webgraph
procedure TWebGraph.AppendRaw(path: T2DIntArray);
var
  rawNode: TIntArray;
  p: TPoint;
  i: Integer = -1;
begin
  for rawNode in path do begin
    p := Point(rawNode[0], rawNode[1]);
    Self.AddNode(p, i);
    Inc(i);
  end;
end;

// add path to a rswalker webgraph
procedure TWebGraph.Append(path: TPointArray);
var
  p: TPoint;
  i: Integer = -1;
begin
  for p in path do begin
    Self.AddNode(p, i);
    Inc(i);
  end;
end;
